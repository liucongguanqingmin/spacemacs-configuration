;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "init.el" "/Users/shadowalker/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "jest.config.js" "/Users/shadowalker/project/myvue/cnodes-ant-design-vue/jest.config.js" fundamental-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 160) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 34) (min-pixel-width-safe . 32)) hc (pixel-width . 1436) (pixel-height . 769) (total-width . 180) (total-height . 45) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 296) (pixel-height . 769) (total-width . 37) (total-height . 45) (normal-height . 1.0) (normal-width . 0.20473537604456826) (parameters (window-side . left) (window-slot . 0)) (buffer " *Treemacs-Scoped-Buffer-#<frame Emacs@shadowalker-2.local 0x104816c30>*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated . t) (point . 142) (start . 1))) (vc (last . t) (pixel-width . 1140) (pixel-height . 769) (total-width . 143) (total-height . 45) (normal-height . 1.0) (normal-width . 0.7952646239554317) (combination-limit . t) (leaf (pixel-width . 1140) (pixel-height . 616) (total-width . 143) (total-height . 36) (normal-height . 0.8094928478543564) (normal-width . 1.0) (buffer "*spacemacs*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 6430) (start . 4924))) (leaf (last . t) (pixel-width . 1140) (pixel-height . 153) (total-width . 143) (total-height . 9) (normal-height . 0.19050715214564362) (normal-width . 1.0) (buffer "*Warnings*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 74) (start . 1)))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1))) t nil nil))